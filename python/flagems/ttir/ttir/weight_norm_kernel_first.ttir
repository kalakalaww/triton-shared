#loc = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0)
#loc1 = loc(unknown)
#loc24 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":85:32)
#loc50 = loc(callsite(#loc1 at #loc24))
module {
  tt.func public @weight_norm_kernel_first(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0), %arg4: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0), %arg5: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0), %arg6: f32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":61:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<32x2048xf32> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c32_i64 = arith.constant 32 : i64 loc(#loc1)
    %0 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc3)
    %2 = tt.get_program_id x : i32 loc(#loc47)
    %3 = arith.extsi %2 : i32 to i64 loc(#loc48)
    %4 = arith.muli %3, %c32_i64 : i64 loc(#loc7)
    %5 = arith.extsi %1 : tensor<32x1xi32> to tensor<32x1xi64> loc(#loc8)
    %6 = tt.splat %4 : i64 -> tensor<32x1xi64> loc(#loc8)
    %7 = arith.addi %6, %5 : tensor<32x1xi64> loc(#loc8)
    %8 = arith.extsi %arg4 : i32 to i64 loc(#loc9)
    %9 = tt.splat %8 : i64 -> tensor<32x1xi64> loc(#loc9)
    %10 = arith.cmpi slt, %7, %9 : tensor<32x1xi64> loc(#loc9)
    %11 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc10)
    %12 = tt.expand_dims %11 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc11)
    %13 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc12)
    %14 = tt.broadcast %10 : tensor<32x1xi1> -> tensor<32x2048xi1> loc(#loc13)
    %15 = arith.extsi %arg5 : i32 to i64 loc(#loc14)
    %16 = tt.splat %15 : i64 -> tensor<32x1xi64> loc(#loc14)
    %17 = arith.muli %7, %16 : tensor<32x1xi64> loc(#loc14)
    %18 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %17 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi64> loc(#loc15)
    %20 = tt.broadcast %19 : tensor<32x1x!tt.ptr<f32>> -> tensor<32x2048x!tt.ptr<f32>> loc(#loc16)
    %21 = scf.for %arg7 = %c0_i32 to %arg5 step %c2048_i32 iter_args(%arg8 = %cst) -> (tensor<32x2048xf32>)  : i32 {
      %45 = tt.splat %arg7 : i32 -> tensor<1x2048xi32> loc(#loc18)
      %46 = arith.addi %45, %12 : tensor<1x2048xi32> loc(#loc18)
      %47 = arith.cmpi slt, %46, %13 : tensor<1x2048xi32> loc(#loc12)
      %48 = tt.broadcast %47 : tensor<1x2048xi1> -> tensor<32x2048xi1> loc(#loc13)
      %49 = arith.andi %48, %14 : tensor<32x2048xi1> loc(#loc13)
      %50 = tt.broadcast %46 : tensor<1x2048xi32> -> tensor<32x2048xi32> loc(#loc16)
      %51 = tt.addptr %20, %50 : tensor<32x2048x!tt.ptr<f32>>, tensor<32x2048xi32> loc(#loc16)
      %52 = tt.load %51, %49 : tensor<32x2048x!tt.ptr<f32>> loc(#loc19)
      %53 = arith.mulf %52, %52 : tensor<32x2048xf32> loc(#loc20)
      %54 = arith.addf %arg8, %53 : tensor<32x2048xf32> loc(#loc21)
      scf.yield %54 : tensor<32x2048xf32> loc(#loc22)
    } loc(#loc17)
    %22 = "tt.reduce"(%21) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc24)), %arg8: f32 loc(callsite(#loc1 at #loc24))):
      %45 = arith.addf %arg7, %arg8 : f32 loc(#loc52)
      tt.reduce.return %45 : f32 loc(#loc49)
    }) : (tensor<32x2048xf32>) -> tensor<32xf32> loc(#loc49)
    %23 = tt.splat %arg6 : f32 -> tensor<32xf32> loc(#loc26)
    %24 = arith.addf %22, %23 : tensor<32xf32> loc(#loc26)
    %25 = math.sqrt %24 : tensor<32xf32> loc(#loc27)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc28)
    %27 = tt.addptr %26, %7 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi64> loc(#loc28)
    %28 = tt.expand_dims %25 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc29)
    tt.store %27, %28, %10 : tensor<32x1x!tt.ptr<f32>> loc(#loc30)
    %29 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc31)
    %30 = tt.addptr %29, %7 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi64> loc(#loc31)
    %31 = tt.load %30, %10 : tensor<32x1x!tt.ptr<f32>> loc(#loc32)
    %32 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc33)
    %33 = tt.broadcast %10 : tensor<32x1xi1> -> tensor<32x2048xi1> loc(#loc34)
    %34 = arith.extsi %arg5 : i32 to i64 loc(#loc35)
    %35 = tt.splat %34 : i64 -> tensor<32x1xi64> loc(#loc35)
    %36 = arith.muli %7, %35 : tensor<32x1xi64> loc(#loc35)
    %37 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc36)
    %38 = tt.addptr %37, %36 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi64> loc(#loc36)
    %39 = tt.broadcast %38 : tensor<32x1x!tt.ptr<f32>> -> tensor<32x2048x!tt.ptr<f32>> loc(#loc37)
    %40 = tt.broadcast %28 : tensor<32x1xf32> -> tensor<32x2048xf32> loc(#loc38)
    %41 = tt.broadcast %31 : tensor<32x1xf32> -> tensor<32x2048xf32> loc(#loc39)
    %42 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc40)
    %43 = tt.addptr %42, %36 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi64> loc(#loc40)
    %44 = tt.broadcast %43 : tensor<32x1x!tt.ptr<f32>> -> tensor<32x2048x!tt.ptr<f32>> loc(#loc41)
    scf.for %arg7 = %c0_i32 to %arg5 step %c2048_i32  : i32 {
      %45 = tt.splat %arg7 : i32 -> tensor<1x2048xi32> loc(#loc43)
      %46 = arith.addi %45, %12 : tensor<1x2048xi32> loc(#loc43)
      %47 = arith.cmpi slt, %46, %32 : tensor<1x2048xi32> loc(#loc33)
      %48 = tt.broadcast %47 : tensor<1x2048xi1> -> tensor<32x2048xi1> loc(#loc34)
      %49 = arith.andi %48, %33 : tensor<32x2048xi1> loc(#loc34)
      %50 = tt.broadcast %46 : tensor<1x2048xi32> -> tensor<32x2048xi32> loc(#loc37)
      %51 = tt.addptr %39, %50 : tensor<32x2048x!tt.ptr<f32>>, tensor<32x2048xi32> loc(#loc37)
      %52 = tt.load %51, %49 : tensor<32x2048x!tt.ptr<f32>> loc(#loc44)
      %53 = arith.divf %52, %40 : tensor<32x2048xf32> loc(#loc38)
      %54 = arith.mulf %53, %41 : tensor<32x2048xf32> loc(#loc39)
      %55 = tt.addptr %44, %50 : tensor<32x2048x!tt.ptr<f32>>, tensor<32x2048xi32> loc(#loc41)
      tt.store %55, %54, %49 : tensor<32x2048x!tt.ptr<f32>> loc(#loc45)
    } loc(#loc42)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":72:22)
#loc3 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":72:38)
#loc4 = loc("/workspace/FlagGems_sophgo/src/flag_gems/utils/triton_lang_extension.py":22:25)
#loc5 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":73:24)
#loc6 = loc("/workspace/FlagGems_sophgo/src/flag_gems/utils/triton_lang_extension.py":22:34)
#loc7 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":73:34)
#loc8 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":74:22)
#loc9 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":75:28)
#loc10 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":77:22)
#loc11 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":77:38)
#loc12 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":81:28)
#loc13 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":81:34)
#loc14 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":82:43)
#loc15 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":82:30)
#loc16 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":82:47)
#loc17 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":79:28)
#loc18 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":80:28)
#loc19 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":82:26)
#loc20 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":83:29)
#loc21 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":83:19)
#loc22 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":83:8)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":286:36)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":256:15)
#loc26 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":85:51)
#loc27 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":85:25)
#loc28 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":86:20)
#loc29 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":86:43)
#loc30 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":86:32)
#loc31 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":87:26)
#loc32 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":87:22)
#loc33 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":91:28)
#loc34 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":91:34)
#loc35 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":92:43)
#loc36 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":92:30)
#loc37 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":92:47)
#loc38 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":93:26)
#loc39 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":94:22)
#loc40 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":95:26)
#loc41 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":95:43)
#loc42 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":89:28)
#loc43 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":90:28)
#loc44 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":92:26)
#loc45 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":95:55)
#loc46 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/weightnorm.py":89:4)
#loc47 = loc(callsite(#loc4 at #loc5))
#loc48 = loc(callsite(#loc6 at #loc5))
#loc49 = loc(callsite(#loc23 at #loc24))
#loc51 = loc(callsite(#loc25 at #loc23))
#loc52 = loc(callsite(#loc51 at #loc24))
