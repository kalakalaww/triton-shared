#loc = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0)
module {
  tt.func public @addmm_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg4: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg5: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg6: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg7: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg8: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg9: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg10: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg11: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0), %arg12: i32 loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":19:0)) attributes {noinline = false} {
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<64> : tensor<128x64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128x256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64x256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i64 = arith.constant 256 : i64 loc(#loc1)
    %c128_i64 = arith.constant 128 : i64 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc57)
    %1 = arith.extsi %0 : i32 to i64 loc(#loc58)
    %2 = tt.get_program_id y : i32 loc(#loc59)
    %3 = arith.extsi %2 : i32 to i64 loc(#loc60)
    %4 = arith.muli %1, %c128_i64 : i64 loc(#loc6)
    %5 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc7)
    %6 = arith.extsi %5 : tensor<128xi32> to tensor<128xi64> loc(#loc8)
    %7 = tt.splat %4 : i64 -> tensor<128xi64> loc(#loc8)
    %8 = arith.addi %7, %6 : tensor<128xi64> loc(#loc8)
    %9 = arith.muli %3, %c256_i64 : i64 loc(#loc9)
    %10 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc10)
    %11 = arith.extsi %10 : tensor<256xi32> to tensor<256xi64> loc(#loc11)
    %12 = tt.splat %9 : i64 -> tensor<256xi64> loc(#loc11)
    %13 = arith.addi %12, %11 : tensor<256xi64> loc(#loc11)
    %14 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc12)
    %15 = tt.expand_dims %8 {axis = 1 : i32} : tensor<128xi64> -> tensor<128x1xi64> loc(#loc13)
    %16 = arith.extsi %arg9 : i32 to i64 loc(#loc14)
    %17 = tt.splat %16 : i64 -> tensor<128x1xi64> loc(#loc14)
    %18 = arith.muli %15, %17 : tensor<128x1xi64> loc(#loc14)
    %19 = tt.expand_dims %14 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc15)
    %20 = arith.extsi %19 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc16)
    %21 = tt.broadcast %18 : tensor<128x1xi64> -> tensor<128x64xi64> loc(#loc16)
    %22 = tt.broadcast %20 : tensor<1x64xi64> -> tensor<128x64xi64> loc(#loc16)
    %23 = arith.addi %21, %22 : tensor<128x64xi64> loc(#loc16)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x64x!tt.ptr<f32>> loc(#loc17)
    %25 = tt.addptr %24, %23 : tensor<128x64x!tt.ptr<f32>>, tensor<128x64xi64> loc(#loc17)
    %26 = tt.expand_dims %14 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc18)
    %27 = tt.splat %arg10 : i32 -> tensor<64x1xi32> loc(#loc19)
    %28 = arith.muli %26, %27 : tensor<64x1xi32> loc(#loc19)
    %29 = tt.expand_dims %13 {axis = 0 : i32} : tensor<256xi64> -> tensor<1x256xi64> loc(#loc20)
    %30 = arith.extsi %28 : tensor<64x1xi32> to tensor<64x1xi64> loc(#loc21)
    %31 = tt.broadcast %30 : tensor<64x1xi64> -> tensor<64x256xi64> loc(#loc21)
    %32 = tt.broadcast %29 : tensor<1x256xi64> -> tensor<64x256xi64> loc(#loc21)
    %33 = arith.addi %31, %32 : tensor<64x256xi64> loc(#loc21)
    %34 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x256x!tt.ptr<f32>> loc(#loc22)
    %35 = tt.addptr %34, %33 : tensor<64x256x!tt.ptr<f32>>, tensor<64x256xi64> loc(#loc22)
    %36 = arith.addi %arg8, %c63_i32 : i32 loc(#loc61)
    %37 = arith.divsi %36, %c64_i32 : i32 loc(#loc62)
    %38 = arith.extsi %arg6 : i32 to i64 loc(#loc26)
    %39 = tt.splat %38 : i64 -> tensor<128x1xi64> loc(#loc26)
    %40 = arith.cmpi slt, %15, %39 : tensor<128x1xi64> loc(#loc26)
    %41 = tt.broadcast %40 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc27)
    %42 = arith.extsi %arg7 : i32 to i64 loc(#loc28)
    %43 = tt.splat %42 : i64 -> tensor<1x256xi64> loc(#loc28)
    %44 = arith.cmpi slt, %29, %43 : tensor<1x256xi64> loc(#loc28)
    %45 = tt.broadcast %44 : tensor<1x256xi1> -> tensor<64x256xi1> loc(#loc29)
    %46 = arith.muli %arg10, %c64_i32 : i32 loc(#loc30)
    %47 = tt.splat %46 : i32 -> tensor<64x256xi32> loc(#loc31)
    %48:3 = scf.for %arg13 = %c0_i32 to %37 step %c1_i32 iter_args(%arg14 = %cst_0, %arg15 = %25, %arg16 = %35) -> (tensor<128x256xf32>, tensor<128x64x!tt.ptr<f32>>, tensor<64x256x!tt.ptr<f32>>)  : i32 {
      %81 = arith.muli %arg13, %c64_i32 : i32 loc(#loc33)
      %82 = arith.subi %arg8, %81 : i32 loc(#loc34)
      %83 = tt.splat %82 : i32 -> tensor<1x64xi32> loc(#loc35)
      %84 = arith.cmpi slt, %19, %83 : tensor<1x64xi32> loc(#loc35)
      %85 = tt.broadcast %84 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc27)
      %86 = arith.andi %41, %85 : tensor<128x64xi1> loc(#loc27)
      %87 = tt.load %arg15, %86, %cst_2 : tensor<128x64x!tt.ptr<f32>> loc(#loc36)
      %88 = tt.splat %82 : i32 -> tensor<64x1xi32> loc(#loc37)
      %89 = arith.cmpi slt, %26, %88 : tensor<64x1xi32> loc(#loc37)
      %90 = tt.broadcast %89 : tensor<64x1xi1> -> tensor<64x256xi1> loc(#loc29)
      %91 = arith.andi %90, %45 : tensor<64x256xi1> loc(#loc29)
      %92 = tt.load %arg16, %91, %cst_1 : tensor<64x256x!tt.ptr<f32>> loc(#loc38)
      %93 = tt.dot %87, %92, %arg14 : tensor<128x64xf32> * tensor<64x256xf32> -> tensor<128x256xf32> loc(#loc39)
      %94 = tt.addptr %arg15, %cst : tensor<128x64x!tt.ptr<f32>>, tensor<128x64xi32> loc(#loc40)
      %95 = tt.addptr %arg16, %47 : tensor<64x256x!tt.ptr<f32>>, tensor<64x256xi32> loc(#loc31)
      scf.yield %93, %94, %95 : tensor<128x256xf32>, tensor<128x64x!tt.ptr<f32>>, tensor<64x256x!tt.ptr<f32>> loc(#loc41)
    } loc(#loc32)
    %49 = arith.extsi %arg12 : i32 to i64 loc(#loc42)
    %50 = tt.splat %49 : i64 -> tensor<128x1xi64> loc(#loc42)
    %51 = arith.muli %50, %15 : tensor<128x1xi64> loc(#loc42)
    %52 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc43)
    %53 = tt.addptr %52, %51 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi64> loc(#loc43)
    %54 = tt.broadcast %53 : tensor<128x1x!tt.ptr<f32>> -> tensor<128x256x!tt.ptr<f32>> loc(#loc44)
    %55 = tt.broadcast %29 : tensor<1x256xi64> -> tensor<128x256xi64> loc(#loc44)
    %56 = tt.addptr %54, %55 : tensor<128x256x!tt.ptr<f32>>, tensor<128x256xi64> loc(#loc44)
    %57 = arith.extsi %arg6 : i32 to i64 loc(#loc45)
    %58 = tt.splat %57 : i64 -> tensor<128x1xi64> loc(#loc45)
    %59 = arith.cmpi slt, %15, %58 : tensor<128x1xi64> loc(#loc45)
    %60 = arith.extsi %arg7 : i32 to i64 loc(#loc46)
    %61 = tt.splat %60 : i64 -> tensor<1x256xi64> loc(#loc46)
    %62 = arith.cmpi slt, %29, %61 : tensor<1x256xi64> loc(#loc46)
    %63 = tt.broadcast %59 : tensor<128x1xi1> -> tensor<128x256xi1> loc(#loc47)
    %64 = tt.broadcast %62 : tensor<1x256xi1> -> tensor<128x256xi1> loc(#loc47)
    %65 = arith.andi %63, %64 : tensor<128x256xi1> loc(#loc47)
    %66 = arith.extsi %arg11 : i32 to i64 loc(#loc48)
    %67 = tt.splat %66 : i64 -> tensor<128x1xi64> loc(#loc48)
    %68 = arith.muli %67, %15 : tensor<128x1xi64> loc(#loc48)
    %69 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc49)
    %70 = tt.addptr %69, %68 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi64> loc(#loc49)
    %71 = tt.broadcast %70 : tensor<128x1x!tt.ptr<f32>> -> tensor<128x256x!tt.ptr<f32>> loc(#loc50)
    %72 = tt.addptr %71, %55 : tensor<128x256x!tt.ptr<f32>>, tensor<128x256xi64> loc(#loc50)
    %73 = tt.load %72, %65, %cst_0 : tensor<128x256x!tt.ptr<f32>> loc(#loc51)
    %74 = arith.sitofp %arg4 : i32 to f32 loc(#loc52)
    %75 = tt.splat %74 : f32 -> tensor<128x256xf32> loc(#loc52)
    %76 = arith.mulf %48#0, %75 : tensor<128x256xf32> loc(#loc52)
    %77 = arith.sitofp %arg5 : i32 to f32 loc(#loc53)
    %78 = tt.splat %77 : f32 -> tensor<128x256xf32> loc(#loc53)
    %79 = arith.mulf %73, %78 : tensor<128x256xf32> loc(#loc53)
    %80 = arith.addf %76, %79 : tensor<128x256xf32> loc(#loc54)
    tt.store %56, %80, %65 : tensor<128x256x!tt.ptr<f32>> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/workspace/FlagGems_sophgo/src/flag_gems/utils/triton_lang_extension.py":22:25)
#loc3 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":41:27)
#loc4 = loc("/workspace/FlagGems_sophgo/src/flag_gems/utils/triton_lang_extension.py":22:34)
#loc5 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":42:27)
#loc6 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":44:22)
#loc7 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":44:50)
#loc8 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":44:37)
#loc9 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":45:22)
#loc10 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":45:50)
#loc11 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":45:37)
#loc12 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":46:26)
#loc13 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":47:30)
#loc14 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":47:41)
#loc15 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":47:60)
#loc16 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":47:53)
#loc17 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":47:22)
#loc18 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":48:29)
#loc19 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":48:40)
#loc20 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":48:60)
#loc21 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":48:52)
#loc22 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":48:22)
#loc23 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":40:22)
#loc24 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":51:33)
#loc25 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":40:28)
#loc26 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":54:37)
#loc27 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":54:43)
#loc28 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":59:80)
#loc29 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":59:61)
#loc30 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":64:33)
#loc31 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":64:18)
#loc32 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":51:22)
#loc33 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":54:69)
#loc34 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":54:65)
#loc35 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":54:61)
#loc36 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":53:12)
#loc37 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":59:36)
#loc38 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":58:12)
#loc39 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":62:33)
#loc40 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":63:18)
#loc41 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":64:8)
#loc42 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":68:33)
#loc43 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":68:21)
#loc44 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":68:52)
#loc45 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":69:33)
#loc46 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":69:58)
#loc47 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":69:39)
#loc48 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":70:33)
#loc49 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":70:21)
#loc50 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":70:52)
#loc51 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":71:19)
#loc52 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":73:32)
#loc53 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":73:47)
#loc54 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":73:40)
#loc55 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":75:21)
#loc56 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/addmm.py":75:4)
#loc57 = loc(callsite(#loc2 at #loc3))
#loc58 = loc(callsite(#loc4 at #loc3))
#loc59 = loc(callsite(#loc2 at #loc5))
#loc60 = loc(callsite(#loc4 at #loc5))
#loc61 = loc(callsite(#loc23 at #loc24))
#loc62 = loc(callsite(#loc25 at #loc24))
