#loc = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":20:0)
module {
  tt.func public @bmm_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":20:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":20:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":20:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":20:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":20:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":20:0)) attributes {noinline = false} {
    %c31_i32 = arith.constant 31 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<32x32xf32> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<32x32xi32> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<32xi32> loc(#loc1)
    %c32_i64 = arith.constant 32 : i64 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id z : i32 loc(#loc50)
    %1 = arith.extsi %0 : i32 to i64 loc(#loc51)
    %2 = arith.extsi %arg3 : i32 to i64 loc(#loc5)
    %3 = arith.muli %1, %2 : i64 loc(#loc5)
    %4 = arith.extsi %arg5 : i32 to i64 loc(#loc6)
    %5 = arith.muli %3, %4 : i64 loc(#loc6)
    %6 = tt.addptr %arg0, %5 : !tt.ptr<f32>, i64 loc(#loc7)
    %7 = arith.muli %1, %4 : i64 loc(#loc8)
    %8 = arith.extsi %arg4 : i32 to i64 loc(#loc9)
    %9 = arith.muli %7, %8 : i64 loc(#loc9)
    %10 = tt.addptr %arg1, %9 : !tt.ptr<f32>, i64 loc(#loc10)
    %11 = arith.muli %3, %8 : i64 loc(#loc11)
    %12 = tt.addptr %arg2, %11 : !tt.ptr<f32>, i64 loc(#loc12)
    %13 = tt.get_program_id x : i32 loc(#loc52)
    %14 = arith.extsi %13 : i32 to i64 loc(#loc53)
    %15 = tt.get_program_id y : i32 loc(#loc54)
    %16 = arith.extsi %15 : i32 to i64 loc(#loc55)
    %17 = arith.muli %14, %c32_i64 : i64 loc(#loc15)
    %18 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc16)
    %19 = arith.extsi %18 : tensor<32xi32> to tensor<32xi64> loc(#loc17)
    %20 = tt.splat %17 : i64 -> tensor<32xi64> loc(#loc17)
    %21 = arith.addi %20, %19 : tensor<32xi64> loc(#loc17)
    %22 = arith.muli %16, %c32_i64 : i64 loc(#loc18)
    %23 = tt.splat %22 : i64 -> tensor<32xi64> loc(#loc19)
    %24 = arith.addi %23, %19 : tensor<32xi64> loc(#loc19)
    %25 = tt.splat %8 : i64 -> tensor<32xi64> loc(#loc20)
    %26 = arith.cmpi slt, %24, %25 : tensor<32xi64> loc(#loc20)
    %27 = tt.expand_dims %21 {axis = 1 : i32} : tensor<32xi64> -> tensor<32x1xi64> loc(#loc21)
    %28 = tt.splat %4 : i64 -> tensor<32x1xi64> loc(#loc22)
    %29 = arith.muli %27, %28 : tensor<32x1xi64> loc(#loc22)
    %30 = tt.splat %6 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc23)
    %31 = tt.addptr %30, %29 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi64> loc(#loc23)
    %32 = tt.expand_dims %18 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc24)
    %33 = tt.broadcast %31 : tensor<32x1x!tt.ptr<f32>> -> tensor<32x32x!tt.ptr<f32>> loc(#loc25)
    %34 = tt.broadcast %32 : tensor<1x32xi32> -> tensor<32x32xi32> loc(#loc25)
    %35 = tt.addptr %33, %34 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi32> loc(#loc25)
    %36 = tt.expand_dims %18 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc26)
    %37 = tt.splat %arg4 : i32 -> tensor<32x1xi32> loc(#loc27)
    %38 = arith.muli %36, %37 : tensor<32x1xi32> loc(#loc27)
    %39 = tt.splat %10 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc28)
    %40 = tt.addptr %39, %38 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc28)
    %41 = tt.expand_dims %24 {axis = 0 : i32} : tensor<32xi64> -> tensor<1x32xi64> loc(#loc29)
    %42 = tt.broadcast %40 : tensor<32x1x!tt.ptr<f32>> -> tensor<32x32x!tt.ptr<f32>> loc(#loc30)
    %43 = tt.broadcast %41 : tensor<1x32xi64> -> tensor<32x32xi64> loc(#loc30)
    %44 = tt.addptr %42, %43 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi64> loc(#loc30)
    %45 = tt.splat %8 : i64 -> tensor<32x1xi64> loc(#loc31)
    %46 = arith.muli %27, %45 : tensor<32x1xi64> loc(#loc31)
    %47 = tt.splat %12 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc32)
    %48 = tt.addptr %47, %46 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi64> loc(#loc32)
    %49 = tt.broadcast %48 : tensor<32x1x!tt.ptr<f32>> -> tensor<32x32x!tt.ptr<f32>> loc(#loc33)
    %50 = tt.addptr %49, %43 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi64> loc(#loc33)
    %51 = arith.addi %arg5, %c31_i32 : i32 loc(#loc56)
    %52 = arith.divsi %51, %c32_i32 : i32 loc(#loc57)
    %53 = tt.expand_dims %26 {axis = 0 : i32} : tensor<32xi1> -> tensor<1x32xi1> loc(#loc37)
    %54 = tt.broadcast %53 : tensor<1x32xi1> -> tensor<32x32xi1> loc(#loc38)
    %55 = arith.muli %arg4, %c32_i32 : i32 loc(#loc39)
    %56 = tt.splat %55 : i32 -> tensor<32x32xi32> loc(#loc40)
    %57:4 = scf.for %arg6 = %c0_i32 to %52 step %c1_i32 iter_args(%arg7 = %18, %arg8 = %35, %arg9 = %44, %arg10 = %cst) -> (tensor<32xi32>, tensor<32x32x!tt.ptr<f32>>, tensor<32x32x!tt.ptr<f32>>, tensor<32x32xf32>)  : i32 {
      %60 = tt.load %arg8 : tensor<32x32x!tt.ptr<f32>> loc(#loc42)
      %61 = tt.load %arg9, %54 : tensor<32x32x!tt.ptr<f32>> loc(#loc38)
      %62 = arith.addi %arg7, %cst_1 : tensor<32xi32> loc(#loc43)
      %63 = tt.addptr %arg8, %cst_0 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi32> loc(#loc44)
      %64 = tt.addptr %arg9, %56 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi32> loc(#loc40)
      %65 = tt.dot %60, %61, %arg10 : tensor<32x32xf32> * tensor<32x32xf32> -> tensor<32x32xf32> loc(#loc45)
      scf.yield %62, %63, %64, %65 : tensor<32xi32>, tensor<32x32x!tt.ptr<f32>>, tensor<32x32x!tt.ptr<f32>>, tensor<32x32xf32> loc(#loc46)
    } loc(#loc41)
    %58 = tt.expand_dims %26 {axis = 0 : i32} : tensor<32xi1> -> tensor<1x32xi1> loc(#loc47)
    %59 = tt.broadcast %58 : tensor<1x32xi1> -> tensor<32x32xi1> loc(#loc48)
    tt.store %50, %57#3, %59 : tensor<32x32x!tt.ptr<f32>> loc(#loc48)
    tt.return loc(#loc49)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/workspace/FlagGems_sophgo/src/flag_gems/utils/triton_lang_extension.py":22:25)
#loc3 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":36:27)
#loc4 = loc("/workspace/FlagGems_sophgo/src/flag_gems/utils/triton_lang_extension.py":22:34)
#loc5 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":37:17)
#loc6 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":37:21)
#loc7 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":37:9)
#loc8 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":38:17)
#loc9 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":38:21)
#loc10 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":38:9)
#loc11 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":39:21)
#loc12 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":39:9)
#loc13 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":41:26)
#loc14 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":42:26)
#loc15 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":62:21)
#loc16 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":62:43)
#loc17 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":62:30)
#loc18 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":63:21)
#loc19 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":63:30)
#loc20 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":69:26)
#loc21 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":71:24)
#loc22 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":71:35)
#loc23 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":71:17)
#loc24 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":71:46)
#loc25 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":71:39)
#loc26 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":72:24)
#loc27 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":72:35)
#loc28 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":72:17)
#loc29 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":72:46)
#loc30 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":72:39)
#loc31 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":73:35)
#loc32 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":73:17)
#loc33 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":73:39)
#loc34 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":40:22)
#loc35 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":75:27)
#loc36 = loc("/usr/local/lib/python3.10/dist-packages/triton/language/standard.py":40:28)
#loc37 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":86:32)
#loc38 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":99:28)
#loc39 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":103:27)
#loc40 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":103:18)
#loc41 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":77:19)
#loc42 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":98:28)
#loc43 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":101:18)
#loc44 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":102:18)
#loc45 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":105:23)
#loc46 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":105:8)
#loc47 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":110:24)
#loc48 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":115:24)
#loc49 = loc("/workspace/FlagGems_sophgo/src/flag_gems/ops/bmm.py":115:4)
#loc50 = loc(callsite(#loc2 at #loc3))
#loc51 = loc(callsite(#loc4 at #loc3))
#loc52 = loc(callsite(#loc2 at #loc13))
#loc53 = loc(callsite(#loc4 at #loc13))
#loc54 = loc(callsite(#loc2 at #loc14))
#loc55 = loc(callsite(#loc4 at #loc14))
#loc56 = loc(callsite(#loc34 at #loc35))
#loc57 = loc(callsite(#loc36 at #loc35))
